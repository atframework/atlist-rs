name: "Build On Linux"

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      - master # Push events on master branch
      - dev
    tags:
      - "*"

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build
    # This job runs on Linux
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        toolchain: [stable]
        target: [x86_64-unknown-linux-gnu]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true
          default: true
          components: "rustfmt, clippy, cargo, rust-docs"
      - name: Format and lint
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash
        run: |
          cargo fmt --all -- --check
          cargo clippy
      - name: Release build
        uses: actions-rs/cargo@v1
        if: ${{ matrix.os != 'ubuntu-latest' }}
        with:
          command: build
          args: --release --all-features
      - name: Debug build & test
        uses: actions-rs/cargo@v1
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          command: test
          args: --all-features
        env:
          RUSTFLAGS: "-C link-dead-code"
      - name: Cache prebuilt and cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/prebuilt
            ~/.cargo
            !~/prebuilt/exclude
          key: ${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Generate coverage
        if: ${{ matrix.os == 'ubuntu-latest' && !startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: |
          cargo install cargo-tarpaulin;
          cargo tarpaulin -v --all-features --timeout 120 --out Xml;
      - name: Uploaded code coverage
        if: ${{ matrix.os == 'ubuntu-latest' && !startsWith(github.ref, 'refs/tags/') }}
        uses: codecov/codecov-action@v1
        with:
          # token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
          fail_ci_if_error: true
          gcov_path_exclude: /.cargo,/usr/lib,~/.cargo
